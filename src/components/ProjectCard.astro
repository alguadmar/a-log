---
import Link from '@/components/Link.astro'
import { Badge } from '@/components/ui/badge'
import { formatDate } from '@/lib/utils'
import { Icon } from 'astro-icon/components'
import { Image } from 'astro:assets'
import type { CollectionEntry } from 'astro:content'

interface Props {
  project: CollectionEntry<'projects'>
}

const { project } = Astro.props
---

<div
  class="hover:bg-secondary/50 rounded-xl border p-4 transition-all"
>
  <div class="flex flex-col gap-6 sm:flex-row">
    {
      project.data.image && (
        <Link
          href={`/projects/${project.id}`}
          class="relative h-48 w-full overflow-hidden rounded-md bg-muted sm:h-36 sm:w-[250px] sm:shrink-0"
        >
          <Image
            src={project.data.image}
            alt={project.data.name}
            width={250}
            height={150}
            class="absolute inset-0 h-full w-full object-cover transition-transform hover:scale-105"
            loading="lazy"
          />
        </Link>
      )
    }
    <div class="grow flex flex-col justify-between">
      <div>
        <Link href={`/projects/${project.id}`}>
          <h3 class="mb-2 text-lg font-medium hover:text-primary transition-colors">
            {project.data.name}
          </h3>
        </Link>
        <p class="text-muted-foreground mb-3 text-sm">
          {project.data.description}
        </p>
      </div>
      {
        project.data.startDate && (
          <p class="text-muted-foreground/70 mb-2 flex items-center gap-x-1 text-[0.65rem] xs:text-xs">
            <span class="flex items-center gap-x-1 xs:gap-x-1.5">
              <Icon name="lucide:calendar" class="size-2.5 xs:size-3" />
              <span class="whitespace-nowrap">
                {formatDate(project.data.startDate)}
                {project.data.endDate
                  ? ` → ${formatDate(project.data.endDate)}`
                  : ' → Present'}
              </span>
            </span>
          </p>
        )
      }
      {
        project.data.tags && (
          <div class="flex flex-wrap gap-2 mt-auto">
            {project.data.tags.map((tag: string) => (
              <Link href={`/tags/${tag}`} class="hover:opacity-80 transition-opacity">
                <Badge variant="secondary" className="text-[0.65rem] xs:text-xs">
                  <Icon name="lucide:hash" class="size-2.5 xs:size-3 mr-0.5" />
                  <span class="truncate max-w-[60px] xs:max-w-none">{tag}</span>
                </Badge>
              </Link>
            ))}
          </div>
        )
      }
    </div>
  </div>
</div>
