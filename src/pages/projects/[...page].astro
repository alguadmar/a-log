---
import Breadcrumbs from '@/components/Breadcrumbs.astro'
import PageHead from '@/components/PageHead.astro'
import ProjectCard from '@/components/ProjectCard.astro'
import PaginationComponent from '@/components/ui/pagination'
import { SITE } from '@/consts'
import Layout from '@/layouts/Layout.astro'
import { getAllProjects } from '@/lib/data-utils'
import type { PaginateFunction } from 'astro'

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction
}) {
  const allProjects = await getAllProjects()
  return paginate(allProjects, { pageSize: SITE.postsPerPage })
}

const { page } = Astro.props
---

<Layout>
  <PageHead slot="head" title="Proyectos" description="Explorar todos los proyectos" />
  <Breadcrumbs
    items={
      page.currentPage === 1 
        ? [{ label: 'Proyectos', href: '/projects', icon: 'lucide:briefcase' }]
        : [
            { label: 'Proyectos', href: '/projects', icon: 'lucide:briefcase' },
            { label: `PÃ¡gina ${page.currentPage}`, icon: 'lucide:folder-open' },
          ]
    }
  />

  <div class="flex min-h-[calc(100vh-18rem)] flex-col gap-y-8">
    <section class="flex flex-col gap-y-6">
      <div>
        <h1 class="font-medium text-3xl mb-2">Proyectos</h1>
        <p class="text-muted-foreground">Explora todos los proyectos o filtra por etiquetas.</p>
      </div>
      <ul class="flex flex-col gap-4">
        {page.data.map((project) => (
          <li>
            <ProjectCard project={project} />
          </li>
        ))}
      </ul>
    </section>
  </div>

  {page.lastPage > 1 && (
    <PaginationComponent
      currentPage={page.currentPage}
      totalPages={page.lastPage}
      baseUrl="/projects/"
      client:load
    />
  )}
</Layout>